"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkshopify_base_2_0"] = self["webpackChunkshopify_base_2_0"] || []).push([["commons"],{

/***/ "./src/scripts/lib/components.js":
/*!***************************************!*\
  !*** ./src/scripts/lib/components.js ***!
  \***************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"initComponent\": function() { return /* binding */ initComponent; }\n/* harmony export */ });\nconst initComponent = (Component, selector) => {\n  const elements = [].slice.call(document.querySelectorAll(`[data-module=\"${selector}\"]`), 0);\n  elements.forEach(element => {\n    element.removeAttribute('data-module');\n    Component(element);\n  });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9saWIvY29tcG9uZW50cy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zaG9waWZ5LWJhc2UtMi4wLy4vc3JjL3NjcmlwdHMvbGliL2NvbXBvbmVudHMuanM/ODc2NyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBpbml0Q29tcG9uZW50ID0gKENvbXBvbmVudCwgc2VsZWN0b3IpID0+IHtcclxuICBjb25zdCBlbGVtZW50cyA9IFtdLnNsaWNlLmNhbGwoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChgW2RhdGEtbW9kdWxlPVwiJHtzZWxlY3Rvcn1cIl1gKSwgMClcclxuXHJcbiAgZWxlbWVudHMuZm9yRWFjaChlbGVtZW50ID0+IHtcclxuICAgIGVsZW1lbnQucmVtb3ZlQXR0cmlidXRlKCdkYXRhLW1vZHVsZScpXHJcbiAgICBDb21wb25lbnQoZWxlbWVudClcclxuICB9KVxyXG59XHJcblxyXG5leHBvcnQge1xyXG4gIGluaXRDb21wb25lbnRcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/lib/components.js\n");

/***/ }),

/***/ "./src/scripts/lib/utils.js":
/*!**********************************!*\
  !*** ./src/scripts/lib/utils.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"add\": function() { return /* binding */ add; },\n/* harmony export */   \"addQueryVar\": function() { return /* binding */ addQueryVar; },\n/* harmony export */   \"addQueryVars\": function() { return /* binding */ addQueryVars; },\n/* harmony export */   \"allPass\": function() { return /* binding */ allPass; },\n/* harmony export */   \"always\": function() { return /* binding */ always; },\n/* harmony export */   \"anyPass\": function() { return /* binding */ anyPass; },\n/* harmony export */   \"cond\": function() { return /* binding */ cond; },\n/* harmony export */   \"count\": function() { return /* binding */ count; },\n/* harmony export */   \"curry\": function() { return /* binding */ curry; },\n/* harmony export */   \"debounce\": function() { return /* binding */ debounce; },\n/* harmony export */   \"divide\": function() { return /* binding */ divide; },\n/* harmony export */   \"filter\": function() { return /* binding */ filter; },\n/* harmony export */   \"first\": function() { return /* binding */ first; },\n/* harmony export */   \"flipArgs\": function() { return /* binding */ flipArgs; },\n/* harmony export */   \"getProp\": function() { return /* binding */ getProp; },\n/* harmony export */   \"getQueryVar\": function() { return /* binding */ getQueryVar; },\n/* harmony export */   \"getQueryVars\": function() { return /* binding */ getQueryVars; },\n/* harmony export */   \"hasOwnProperites\": function() { return /* binding */ hasOwnProperites; },\n/* harmony export */   \"identity\": function() { return /* binding */ identity; },\n/* harmony export */   \"ifElse\": function() { return /* binding */ ifElse; },\n/* harmony export */   \"inArray\": function() { return /* binding */ inArray; },\n/* harmony export */   \"isIEorEdge\": function() { return /* binding */ isIEorEdge; },\n/* harmony export */   \"isLocationEqual\": function() { return /* binding */ isLocationEqual; },\n/* harmony export */   \"isNaiveEqual\": function() { return /* binding */ isNaiveEqual; },\n/* harmony export */   \"isTouch\": function() { return /* binding */ isTouch; },\n/* harmony export */   \"last\": function() { return /* binding */ last; },\n/* harmony export */   \"log\": function() { return /* binding */ log; },\n/* harmony export */   \"logArgs\": function() { return /* binding */ logArgs; },\n/* harmony export */   \"logWrap\": function() { return /* binding */ logWrap; },\n/* harmony export */   \"lt\": function() { return /* binding */ lt; },\n/* harmony export */   \"makeArray\": function() { return /* binding */ makeArray; },\n/* harmony export */   \"map\": function() { return /* binding */ map; },\n/* harmony export */   \"multiply\": function() { return /* binding */ multiply; },\n/* harmony export */   \"normalizeId\": function() { return /* binding */ normalizeId; },\n/* harmony export */   \"not\": function() { return /* binding */ not; },\n/* harmony export */   \"nth\": function() { return /* binding */ nth; },\n/* harmony export */   \"parseOptions\": function() { return /* binding */ parseOptions; },\n/* harmony export */   \"partial\": function() { return /* binding */ partial; },\n/* harmony export */   \"pipe\": function() { return /* binding */ pipe; },\n/* harmony export */   \"range\": function() { return /* binding */ range; },\n/* harmony export */   \"reject\": function() { return /* binding */ reject; },\n/* harmony export */   \"removeAllQueryVars\": function() { return /* binding */ removeAllQueryVars; },\n/* harmony export */   \"removeQueryVar\": function() { return /* binding */ removeQueryVar; },\n/* harmony export */   \"returnFalse\": function() { return /* binding */ returnFalse; },\n/* harmony export */   \"returnTrue\": function() { return /* binding */ returnTrue; },\n/* harmony export */   \"set\": function() { return /* binding */ set; },\n/* harmony export */   \"setProp\": function() { return /* binding */ setProp; },\n/* harmony export */   \"staggerCallback\": function() { return /* binding */ staggerCallback; },\n/* harmony export */   \"then\": function() { return /* binding */ then; },\n/* harmony export */   \"toPascalCase\": function() { return /* binding */ toPascalCase; },\n/* harmony export */   \"tryCatch\": function() { return /* binding */ tryCatch; },\n/* harmony export */   \"unset\": function() { return /* binding */ unset; },\n/* harmony export */   \"when\": function() { return /* binding */ when; },\n/* harmony export */   \"whileDo\": function() { return /* binding */ whileDo; }\n/* harmony export */ });\nvar _this = undefined;\n/* global btoa */\n/**\n * Function that always returns True\n*/\nconst returnTrue = () => true;\n\n/**\n* Function that always returns false\n*/\nconst returnFalse = () => false;\n\n/**\n* Identity function\n* @param {*} val\n* @return {*}\n*/\nconst identity = val => val;\nconst not = val => !val;\n\n/**\n* Returns a curried function of the provided function, so that:\n*\n* f(a, b, c) = f(a, b)(c) = f(a)(b)(c) = f(a)(b, c)\n*\n* @param {Function} f\n* @param {..*} Initial parameters\n* @return {Function} The curried function\n*/\nconst curry = function (f) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n  return args.length >= f.length ? f(...args) : curry.bind(_this, f, ...args);\n};\nconst allPass = fs => function () {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n  for (let i = 0; i < fs.length; i++) {\n    if (!fs[i].apply(_this, args)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n* Takes in a list of predicates and return a function that will\n* pass its arguments through each of the predicates, returning\n* true if any predicate is satisfied.\n*\n* @param {Array<Function>}\n* @return {Function}\n*/\nconst anyPass = fs => function () {\n  for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    args[_key3] = arguments[_key3];\n  }\n  for (let i = 0; i < fs.length; i++) {\n    if (fs[i].apply(_this, args)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n* Encapsulates switch/case or if/else logic.\n*\n* Takes a list of [predicate, transformer] pairs.\n*\n* The returned function passes its arguments to predicates, evaluates them, and execute the matched transformer (passing the\n* same arguments). If there's no matched predicate, return undefined.\n*\n* @param pairs Pairs of [predicate, transformer]\n* @return {Function} Encapsulated function\n*/\nconst cond = pairs => function () {\n  for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    args[_key4] = arguments[_key4];\n  }\n  for (let i = 0; i < pairs.length; i++) {\n    if (pairs[i][0].apply(_this, args)) {\n      return pairs[i][1].apply(_this, args);\n    }\n  }\n  return undefined;\n};\n\n/**\n* Encapsulate if/else logic. Basically a wrapper of `cond`.\n*\n* @param p Predicate\n* @param {Function} fT Function to call when predicate is true\n* @param {Function} fF Function to call when predicate is false\n* @return {Function} Encapsulated function\n*/\nconst ifElse = (p, fT, fF) => cond([[p, fT], [returnTrue, fF]]);\nconst when = (p, f) => cond([[p, f], [returnTrue, identity]]);\n\n/**\n* Functional wrapper for array map function.\n*\n* @param {Function} f\n* @param {*} arr\n*/\nconst map = curry((f, arr) => Array.isArray(arr) ? arr.map(f) : f(arr));\nconst filter = curry((f, arr) => Array.isArray(arr) ? arr.filter(f) : f(arr) ? arr : undefined);\n\n/**\n* Partial application\n* @param {Function} f\n* @param {..*} args Initial parameters\n*/\nconst partial = function (f) {\n  for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n    args[_key5 - 1] = arguments[_key5];\n  }\n  return f.bind(_this, ...args);\n};\n\n/**\n* Transform a value by chaining a list of function from left to right\n*\n* @param val\n* @param {..Function} funcs\n* @return {*}\n*/\nconst pipe = function () {\n  for (var _len6 = arguments.length, funcs = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n    funcs[_key6] = arguments[_key6];\n  }\n  return function (val) {\n    return funcs.reduce((acc, f) => f.apply(this, [acc]), val);\n  };\n};\nconst always = val => partial(val);\n\n/**\n* Get property of an object.\n*\n* This is a curried function.\n*\n* @param {string} prop\n* @param {Object} obj\n* @return {*}\n*/\nconst getProp = curry((prop, obj) => {\n  return obj[prop];\n});\nconst lt = curry((b, a) => a < b);\nconst setProp = curry((prop, value, obj) => {\n  obj[prop] = value;\n  return obj;\n});\n\n/**\n* Delay execution of callback used on individual items of a list.\n*\n* This function is curried.\n*\n* @param {number} initial Initial timeout\n* @param {number} step Delay per execution\n* @param {Function} callback Callback\n* @param {Array} items\n* @private\n*/\nconst _staggerCallback = (initial, step, callback, items) => items.reduce((delay, item) => {\n  setTimeout(() => callback(item), delay);\n  return delay + step;\n}, initial);\n\n/**\n* Delay execution of callback used on individual items of a list.\n*\n* This function is curried.\n*\n* @param {number} initial Initial timeout\n* @param {number} step Delay per execution\n* @param {Function} callback Callback\n* @param {Array} items\n*/\nconst staggerCallback = curry(_staggerCallback);\n\n/**\n* Encapsulate try/catch logic.\n*\n* Takes a pair of tryer and catcher functions. User must ensure tryer and catcher return the same\n* type so that chaining / composing works.\n*\n* Returns a function that can take arguments, which will be passed to both tryer and catcher.\n*\n* @param {Function} tryer\n* @param {Function} catcher\n* @return {Function} Encapsulated function\n*/\nconst tryCatch = (tryer, catcher) => function () {\n  for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n    args[_key7] = arguments[_key7];\n  }\n  try {\n    return tryer(...args);\n  } catch (e) {\n    return catcher(e, ...args);\n  }\n};\nconst whileDo = (pred, fn, initial) => pred(initial) ? whileDo(pred, fn, fn(initial)) : initial;\nconst divide = curry((b, a) => a / b);\nconst multiply = curry((b, a) => a * b);\n\n/**\n* Check if an array contains an item.\n*\n* This is a curried wrapper for Array.prototype.indexOf\n*\n* @param {Array}\n* @param {*}\n* @return {boolean}\n*/\nconst inArray = curry((array, item) => array.indexOf(item) !== -1);\n\n/**\n* Get the nth element of an array\n*\n* @param {number}\n* @param {Array}\n* @return {*}\n*/\nconst nth = curry((index, array) => index < 0 ? array[array.length + index] : array[index]);\n\n/**\n* Get the nth element of an array\n*\n* @param {Array}\n* @return {*}\n*/\nconst first = nth(1);\nconst last = nth(-1);\nconst add = curry((b, a) => a + b);\nconst _add1ToLast = pipe(last, add(1));\nconst range = (from, to) => whileDo(pipe(_add1ToLast, lt(to)), array => [...array, _add1ToLast(array)], [from]);\nconst flipArgs = f => curry((arg1, arg2) => f.apply(undefined, [arg2, arg1]));\nconst count = arr => arr.length;\n\n/**\n* Create an array out of an array-like object\n*\n* @param {Object} Array-like object\n* @return {Array} Array\n*/\nconst makeArray = arrayLike => Array.prototype.slice.call(arrayLike);\n\n/**\n* Log a value to console\n*\n* @param {*} val\n* @returns {*}\n*/\nconst log = val => {\n  console.log(val);\n  return val;\n};\nconst logWrap = fn => function () {\n  for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n    args[_key8] = arguments[_key8];\n  }\n  return log(fn.apply(_this, args));\n};\nconst logArgs = fn => function () {\n  for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n    args[_key9] = arguments[_key9];\n  }\n  log(args);\n  return fn.apply(_this, args);\n};\nconst debounce = function (callback, wait) {\n  let context = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _this;\n  let timeout = null;\n  let callbackArgs = null;\n  const later = () => callback.apply(context, callbackArgs);\n  return function () {\n    callbackArgs = arguments;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n};\nconst then = curry((f, promise) => promise.then(f));\nconst reject = curry((f, promise) => promise.catch(f));\nconst parseOptions = function (string) {\n  let def = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let options = {};\n  try {\n    options = JSON.parse(string);\n  } catch (e) {\n    console.warn('Invalid option JSON string.');\n    console.trace();\n    return def;\n  }\n  return Object.assign({}, def, options);\n};\nconst _getQueryPattern = key => new RegExp(`[?&]${key}=([^&]+)`);\nconst getQueryVar = function (key) {\n  let url = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window.location.href;\n  const pattern = _getQueryPattern(key);\n  const matches = url.match(pattern);\n  return matches ? matches[1] : '';\n};\n\n/**\n* Parse a query string into an object with { key: value } structure\n*\n* @param {string} url\n* @returns {Object}\n*/\nconst getQueryVars = function () {\n  let url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window.location.href;\n  return url.replace(/^\\?/, '') // remove ? prefix\n  .split('&') // split into `key=value` chunks\n  .filter(Boolean) // remove empty string\n  .reduce(\n  /**\n  * Aggregate key=value chunks into an Object with {key: value} structure\n  * @param {Object} queryVars - aggregated object\n  * @param {string} pair - e.g. 'key=value'\n  * @returns {Object} - e.g. {key: value}\n  */\n  (queryVars, pair) => {\n    const [key, value] = pair.split('=');\n    queryVars[key] = value;\n    return queryVars;\n  }, {});\n};\nconst addQueryVar = function (key, value) {\n  let url = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : window.location.href;\n  const removed = removeQueryVar(key, url);\n  if (!value && value !== 0) {\n    return removed;\n  }\n  return `${removed}${removed.indexOf('?') === -1 ? '?' : '&'}${key}=${value}`;\n};\nconst addQueryVars = function (object) {\n  let url = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window.location.href;\n  return Object.keys(object).reduce((agg, key) => {\n    return addQueryVar(key, object[key], agg);\n  }, url);\n};\nconst removeAllQueryVars = function () {\n  let url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window.location.href;\n  return url.replace(/\\?.+$/g, '');\n};\nconst removeQueryVar = function (key) {\n  let url = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window.location.href;\n  const idx = url.indexOf('?');\n  if (idx === -1) {\n    return url;\n  }\n  const pattern = _getQueryPattern(key);\n  const replaced = url.replace(pattern, '').replace(/\\?$/, '');\n  if (replaced.indexOf('&') !== -1 && replaced.indexOf('?') === -1) {\n    return replaced.replace(/&/, '?');\n  }\n  return replaced;\n};\nconst toPascalCase = name => name.charAt(0).toUpperCase() + name.slice(1).replace(/(-\\w)/g, m => m[1].toUpperCase());\nconst isLocationEqual = (location1, location2) => {\n  const pathname1 = location1.pathname ? location1.pathname.replace(/^\\//, '') : '';\n  const pathname2 = location2.pathname ? location2.pathname.replace(/^\\//, '') : '';\n  return (!location1.protocol || !location2.protocol || location1.protocol === location2.protocol) && (!location1.host || !location2.host || location1.host === location2.host) && (!pathname1 || pathname2 || pathname1 === pathname2);\n};\nconst isNaiveEqual = (obj1, obj2) => {\n  const objKeys1 = Object.keys(obj1);\n  const objKeys2 = Object.keys(obj2);\n  if (objKeys1.length !== objKeys2.length) {\n    return false;\n  }\n  for (const key in obj1) {\n    if (!obj2[key] || obj2[key] !== obj1[key]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst isIEorEdge = () => {\n  if (document.documentMode || /Edge/.test(navigator.userAgent)) {\n    return true;\n  } else {\n    return false;\n  }\n};\nconst set = (item, selector) => {\n  if (item instanceof Array) {\n    for (const i of item) {\n      i.classList.add(selector);\n    }\n  } else {\n    item.classList.add(selector);\n  }\n};\nconst unset = (item, selector) => {\n  if (item instanceof Array) {\n    for (const i of item) {\n      i.classList.remove(selector);\n    }\n  } else {\n    item.classList.remove(selector);\n  }\n};\nconst isTouch = () => 'ontouchstart' in document.documentElement;\n\n/**\n * Storefront API IDs Generator\n * @param {string} type Object type\n * @param {string} databaseKey Object ID\n * @returns {string} GraphQL ID\n */\nconst normalizeId = (type, databaseKey) => {\n  return btoa(`gid://shopify/${type}/${databaseKey}`);\n};\nconst hasOwnProperites = (property, obj) => {\n  return Object.prototype.hasOwnProperty.call(property, obj);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/lib/utils.js\n");

/***/ })

}]);