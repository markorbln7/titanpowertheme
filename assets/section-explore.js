"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkshopify_base_2_0"] = self["webpackChunkshopify_base_2_0"] || []).push([["section-explore"],{

/***/ "./src/modules/explore/section-explore.js":
/*!************************************************!*\
  !*** ./src/modules/explore/section-explore.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _section_explore_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./section-explore.css */ \"./src/modules/explore/section-explore.css\");\n/* eslint-disable */\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  //Select parent section\n  const parentSection = document.querySelectorAll('.section-explore');\n  parentSection.forEach(section => {\n    // Product cards hover logic\n    const productCards = section.querySelectorAll('.section-explore__product');\n    const desktopLabel = section.querySelector('.section-explore__collection-label-desktop');\n    const travelLabel = section.querySelector('.section-explore__collection-label-travel');\n    let activeProduct = null;\n    let activeCard = null;\n    const initialProduct = section.querySelector('.section-explore__product-content [data-product=\"for-desktop-1\"]');\n    if (initialProduct) {\n      initialProduct.style.opacity = '1';\n      initialProduct.style.transition = 'opacity 0.5s ease';\n      if (desktopLabel) {\n        desktopLabel.classList.add('active');\n      }\n      const initialLines = initialProduct.querySelectorAll('.animate-line');\n      initialLines.forEach(line => line.classList.add('active-line'));\n      activeProduct = initialProduct;\n      const firstCard = section.querySelector('.section-explore__product[data-product-hover=\"for-desktop-1\"]');\n      if (firstCard) {\n        firstCard.classList.add('active');\n        activeCard = firstCard;\n      }\n    }\n    productCards.forEach(card => {\n      card.addEventListener('mouseenter', () => {\n        const productIndex = card.getAttribute('data-product-hover');\n        if (productIndex.startsWith('for-desktop')) {\n          if (desktopLabel) desktopLabel.classList.add('active');\n          if (travelLabel) travelLabel.classList.remove('active');\n        } else if (productIndex.startsWith('for-travel')) {\n          if (travelLabel) travelLabel.classList.add('active');\n          if (desktopLabel) desktopLabel.classList.remove('active');\n        }\n        if (activeProduct) {\n          activeProduct.style.opacity = '0';\n          const activeLines = activeProduct.querySelectorAll('.animate-line');\n          activeLines.forEach(line => line.classList.remove('active-line'));\n        }\n        const targetContent = section.querySelector(`.section-explore__product-content [data-product=\"${productIndex}\"]`);\n        if (targetContent) {\n          targetContent.style.opacity = '1';\n          targetContent.style.transition = 'opacity 0.5s ease';\n          const targetLines = targetContent.querySelectorAll('.animate-line');\n          targetLines.forEach(line => line.classList.add('active-line'));\n          activeProduct = targetContent;\n        }\n        if (activeCard) {\n          activeCard.classList.remove('active');\n        }\n        card.classList.add('active');\n        activeCard = card;\n      });\n    });\n\n    // Popup toggle logic\n    const buyNowButtons = section.querySelectorAll('.js-section-explore__buy-now');\n    const popups = section.querySelectorAll('.buy-now-popup');\n    function openPopup(popup) {\n      popup.style.display = 'block';\n      popup.classList.add('active');\n      document.querySelector('body').style.overflow = 'hidden';\n    }\n    function closePopup(popup) {\n      popup.style.display = 'none';\n      popup.classList.remove('active');\n      document.querySelector('body').style.overflow = 'auto';\n    }\n\n    // Function to update the state of the minus button based on quantity\n    function updateQuantityButtonsState(input, minusButton) {\n      const quantity = parseInt(input.value);\n      if (quantity <= 1) {\n        minusButton.setAttribute(\"disabled\", true);\n        minusButton.classList.add('disabled');\n      } else {\n        minusButton.removeAttribute(\"disabled\");\n        minusButton.classList.remove('disabled');\n      }\n    }\n\n    // Reset quantity button event listeners\n    function resetQuantityListeners() {\n      const quantityMinusButtons = section.querySelectorAll('.buy-now-popup__quantity button[name=\"minus\"]');\n      const quantityPlusButtons = section.querySelectorAll('.buy-now-popup__quantity button[name=\"plus\"]');\n      quantityMinusButtons.forEach(button => {\n        const newButton = button.cloneNode(true);\n        button.parentNode.replaceChild(newButton, button);\n      });\n      quantityPlusButtons.forEach(button => {\n        const newButton = button.cloneNode(true);\n        button.parentNode.replaceChild(newButton, button);\n      });\n    }\n\n    // Handling Buy Now button clicks\n    buyNowButtons.forEach((button, index) => {\n      button.addEventListener('click', () => {\n        const popup = button.parentNode.querySelector('.buy-now-popup');\n        if (popup) {\n          openPopup(popup);\n          resetQuantityListeners();\n\n          // Add quantity control logic\n          const quantityInputs = popup.querySelectorAll('.buy-now-popup__quantity input[type=\"number\"]');\n          const quantityMinusButtons = popup.querySelectorAll('.buy-now-popup__quantity button[name=\"minus\"]');\n          const quantityPlusButtons = popup.querySelectorAll('.buy-now-popup__quantity button[name=\"plus\"]');\n          quantityInputs.forEach((input, idx) => {\n            const minusButton = quantityMinusButtons[idx];\n            const plusButton = quantityPlusButtons[idx];\n\n            // Initially check if the minus button should be disabled\n            updateQuantityButtonsState(input, minusButton);\n            minusButton.addEventListener('click', () => {\n              let quantity = parseInt(input.value);\n              if (quantity > 1) {\n                input.value = quantity - 1;\n                const addToCartButton = popup.querySelector('.js-atc');\n                const addToCheckoutButton = popup.querySelector('.js-checkout');\n                addToCartButton.setAttribute(\"data-quantity\", input.value);\n                addToCheckoutButton.setAttribute(\"data-quantity\", input.value);\n              }\n              updateQuantityButtonsState(input, minusButton); // Update button state after quantity change\n            });\n\n            plusButton.addEventListener('click', () => {\n              let quantity = parseInt(input.value);\n              input.value = quantity + 1;\n              const addToCartButton = popup.querySelector('.js-atc');\n              const addToCheckoutButton = popup.querySelector('.js-checkout');\n              addToCartButton.setAttribute(\"data-quantity\", input.value);\n              addToCheckoutButton.setAttribute(\"data-quantity\", input.value);\n              updateQuantityButtonsState(input, minusButton); // Update button state after quantity change\n            });\n          });\n\n          // Expand description logic\n          const learnMoreButton = popup.querySelector('.buy-now-popup__expand-desc');\n          const descriptionEl = popup.querySelector('.buy-now-popup__description');\n          const descriptionInner = popup.querySelector('.buy-now-popup__description-inner');\n          if (learnMoreButton) {\n            const clonedLearnMoreButton = learnMoreButton.cloneNode(true);\n            learnMoreButton.parentNode.replaceChild(clonedLearnMoreButton, learnMoreButton);\n            clonedLearnMoreButton.addEventListener('click', () => {\n              const expanded = descriptionEl.classList.contains('expanded');\n              if (expanded) {\n                descriptionEl.classList.remove('expanded');\n                descriptionInner.style.height = '100px';\n                clonedLearnMoreButton.querySelector('span').textContent = 'Learn More';\n                descriptionInner.classList.add('with-gradient');\n              } else {\n                descriptionEl.classList.add('expanded');\n                descriptionInner.style.height = `${descriptionInner.scrollHeight}px`;\n                clonedLearnMoreButton.querySelector('span').textContent = 'Show Less';\n                descriptionInner.classList.remove('with-gradient');\n              }\n            });\n          }\n\n          // Upsell checkbox toggle logic\n          const upsellBoxes = popup.querySelectorAll('.buy-now-popup__upsell-box');\n          upsellBoxes.forEach(box => {\n            const checkbox = box.querySelector('input[type=\"checkbox\"]');\n            box.addEventListener('click', () => {\n              checkbox.checked = !checkbox.checked;\n              if (checkbox.checked) {\n                box.classList.add('active');\n              } else {\n                box.classList.remove('active');\n              }\n            });\n          });\n        }\n      });\n    });\n\n    // Add click event listener to close icons\n    popups.forEach(popup => {\n      const closeButtons = popup.querySelectorAll('.close-buy-now-popup');\n      closeButtons.forEach(button => {\n        button.addEventListener('click', () => {\n          closePopup(popup);\n        });\n      });\n    });\n    function updatePlaceholders() {\n      console.log('updating placeholders');\n      fetch('/cart.js').then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        return response.json();\n      }).then(cart => {\n        // Example: Display cart items in a div\n        console.log(cart, 'cart');\n        document.querySelector('body').style.overflow = 'auto';\n        const output = document.querySelector('.js-output');\n        const item_count = cart.item_count;\n        const placeholders = document.querySelectorAll('.placeholder');\n        const cartItems = cart.items;\n        placeholders.forEach(placeholder => {\n          placeholder.classList.remove('filled');\n          placeholder.innerHTML = '+';\n        });\n        // Fill placeholders with cart items\n        cartItems.forEach((item, index) => {\n          console.log(item, index, placeholders.length, 'item, index');\n          if (index < placeholders.length) {\n            placeholders[index].innerHTML = `\n                                <img src=\"${item.image}\" alt=\"${item.title}\" class=\"w-full h-full object-cover\">\n                                <div class=\"absolute bg-black flex items-center justify-center w-[30%] h-[30%] bottom-[5px] right-[5px]\">\n                                    <p class=\"text-white text-center\">${item.quantity}</p>\n                                </div>\n                                <div data-id=\"${item.id}\" class=\"absolute bg-[#c14444] flex items-center justify-center w-[16px] h-[16px] top-[-8px] right-[-8px] js-remove-product cursor-pointer color-white rounded-[50%]\">\n                                    x\n                                </div>\n                            `;\n          } else {\n            document.querySelector('.js-output').innerHTML += `\n                            <div class=\"sticky-card-product w-[50px] h-[50px] bg-white flex items-center justify-center placeholder relative\">\n                                <img src=\"${item.image}\" alt=\"${item.title}\" class=\"w-full h-full object-cover\">\n                                <div class=\"absolute bg-black flex items-center justify-center w-[30%] h-[30%] bottom-[5px] right-[5px]\">\n                                    <p class=\"text-white text-center\">${item.quantity}</p>\n                                </div>\n                                <div data-id=\"${item.id}\" class=\"absolute bg-[#c14444] flex items-center justify-center w-[16px] h-[16px] top-[-8px] right-[-8px] js-remove-product cursor-pointer color-white rounded-[50%]\">\n                                    x\n                                </div>\n                            </div>\n                            `;\n          }\n        });\n      }).catch(error => {\n        console.error('Error fetching cart:', error);\n      });\n      console.log('done updating placeholders');\n    }\n    window.addEventListener('load', updatePlaceholders);\n    function removeProduct(productId) {\n      console.log('removing product', productId);\n      fetch(window.Shopify.routes.root + 'cart/change.js', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: productId,\n          quantity: 0\n        })\n      }).then(response => {\n        if (response.status === 200) {\n          updatePlaceholders();\n        }\n        return response.json();\n      }).catch(error => {\n        console.error('Error:', error);\n      });\n    }\n    let removeProductButtons = document.querySelectorAll('.js-remove-product');\n    document.addEventListener('click', function (event) {\n      if (event.target && event.target.matches('.js-remove-product')) {\n        var dataId = event.target.getAttribute('data-id'); // Retrieve the data-id attribute\n        removeProduct(dataId);\n      }\n    });\n    // console.log(removeProductButtons, 'removeProductButtons');\n    // removeProductButtons.forEach(button => {\n    //     button.addEventListener('click', () => {\n    //         const productId = button.getAttribute('data-id');\n    //         removeProduct(productId);\n    //     });\n    // });\n\n    // Add to cart logic\n    let addToCarts = section.querySelectorAll(\".js-atc\"); // Select all add to cart buttons\n    addToCarts.forEach(addToCart => {\n      addToCart.addEventListener(\"click\", e => {\n        document.querySelector('body').style.overflow = 'auto';\n        let checkout = false;\n        if (addToCart.classList.contains('js-checkout')) {\n          // Check if the button is checkout\n          checkout = true;\n        }\n        let _this = e.target;\n        let productId = _this.getAttribute(\"data-product-id\"); // Get the product id\n        let quantity = _this.getAttribute(\"data-quantity\"); // Get the quantity\n        const upsellProductSelectors = section.querySelectorAll(\".js-upsell-selector.active\"); // Get all active upsell products\n        const addItems = []; // Create an array for items\n        addItems.push({\n          // Add the main product to the array\n          id: productId,\n          quantity: quantity\n        });\n        upsellProductSelectors.forEach(upsellProductSelector => {\n          // Add upsell products to the array\n          const productId = upsellProductSelector.getAttribute(\"data-product-id\");\n          addItems.push({\n            id: productId,\n            quantity: 1\n          });\n        });\n        console.log(addItems);\n        const formData = {\n          // Form data for the cart\n          items: addItems\n        };\n        fetch(window.Shopify.routes.root + \"cart/add.js\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(formData)\n        }).then(response => {\n          console.log(response.status, \"ok\"); // Check if the response is OK\n          if (response.status === 200) {\n            document.querySelector('.buy-now-popup.active').style.display = 'none';\n            document.querySelector('.buy-now-popup.active').classList.remove('active');\n            document.querySelector('body').style.overflow = 'auto';\n            updatePlaceholders();\n          }\n          if (response.status === 200 && checkout) {\n            window.location.href = '/checkout';\n          }\n          return response.json();\n        }).catch(error => {\n          console.error(\"Error:\", error);\n        });\n      });\n    });\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/modules/explore/section-explore.js\n");

/***/ }),

/***/ "./src/scripts/entries/section/explore.js":
/*!************************************************!*\
  !*** ./src/scripts/entries/section/explore.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var lib_components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/components */ \"./src/scripts/lib/components.js\");\n/* harmony import */ var modules_explore_section_explore_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! modules/explore/section-explore.js */ \"./src/modules/explore/section-explore.js\");\n\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  (0,lib_components__WEBPACK_IMPORTED_MODULE_0__.initComponent)(modules_explore_section_explore_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"], 'Explore');\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9lbnRyaWVzL3NlY3Rpb24vZXhwbG9yZS5qcyIsIm1hcHBpbmdzIjoiOzs7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2hvcGlmeS1iYXNlLTIuMC8uL3NyYy9zY3JpcHRzL2VudHJpZXMvc2VjdGlvbi9leHBsb3JlLmpzPzliODYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaW5pdENvbXBvbmVudCB9IGZyb20gJ2xpYi9jb21wb25lbnRzJ1xuaW1wb3J0IEV4cGxvcmUgZnJvbSAnbW9kdWxlcy9leHBsb3JlL3NlY3Rpb24tZXhwbG9yZS5qcydcblxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsICgpID0+IHtcbiAgaW5pdENvbXBvbmVudChFeHBsb3JlLCAnRXhwbG9yZScpXG59KVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/entries/section/explore.js\n");

/***/ }),

/***/ "./src/modules/explore/section-explore.css":
/*!*************************************************!*\
  !*** ./src/modules/explore/section-explore.css ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbW9kdWxlcy9leHBsb3JlL3NlY3Rpb24tZXhwbG9yZS5jc3MiLCJtYXBwaW5ncyI6IjtBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2hvcGlmeS1iYXNlLTIuMC8uL3NyYy9tb2R1bGVzL2V4cGxvcmUvc2VjdGlvbi1leHBsb3JlLmNzcz9mOTMyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/modules/explore/section-explore.css\n");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["commons"], function() { return __webpack_exec__("./src/scripts/entries/section/explore.js"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ }
]);